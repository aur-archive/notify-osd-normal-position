diff -crB notify-osd-0.9.24/src/bubble.c notify-osd-0.9.24-colors/src/bubble.c
*** notify-osd-0.9.29/src/bubble.c	2009-10-20 06:48:09.000000000 -0200
--- notify-osd-0.9.29-colors/src/bubble.c	2010-01-08 18:23:05.000000000 -0200
***************
*** 126,150 ****
  // FIXME: this is in class Defaults already, but not yet hooked up so for the
  // moment we use the macros here, these values reflect the visual-guideline
  // for jaunty notifications
! #define TEXT_TITLE_COLOR_R 1.0f
! #define TEXT_TITLE_COLOR_G 1.0f
! #define TEXT_TITLE_COLOR_B 1.0f
! #define TEXT_TITLE_COLOR_A 1.0f
! 
! #define TEXT_BODY_COLOR_R  0.91f
! #define TEXT_BODY_COLOR_G  0.91f
! #define TEXT_BODY_COLOR_B  0.91f
! #define TEXT_BODY_COLOR_A  1.0f
! 
! #define TEXT_SHADOW_COLOR_R 0.0f
! #define TEXT_SHADOW_COLOR_G 0.0f 
! #define TEXT_SHADOW_COLOR_B 0.0f 
! #define TEXT_SHADOW_COLOR_A 1.0f 
! 
! #define BUBBLE_BG_COLOR_R  0.15f
! #define BUBBLE_BG_COLOR_G  0.15f
! #define BUBBLE_BG_COLOR_B  0.15f
! #define BUBBLE_BG_COLOR_A  0.9f
  
  #define INDICATOR_UNLIT_R  1.0f
  #define INDICATOR_UNLIT_G  1.0f
--- 126,150 ----
  // FIXME: this is in class Defaults already, but not yet hooked up so for the
  // moment we use the macros here, these values reflect the visual-guideline
  // for jaunty notifications
! float TEXT_TITLE_COLOR_R = 1.0f;
! float TEXT_TITLE_COLOR_G = 1.0f;
! float TEXT_TITLE_COLOR_B = 1.0f;
! float TEXT_TITLE_COLOR_A = 1.0f;
! 
! float TEXT_BODY_COLOR_R  = 0.91f;
! float TEXT_BODY_COLOR_G  = 0.91f;
! float TEXT_BODY_COLOR_B  = 0.91f;
! float TEXT_BODY_COLOR_A  = 1.0f;
! 
! float TEXT_SHADOW_COLOR_R = 0.0f;
! float TEXT_SHADOW_COLOR_G = 0.0f;
! float TEXT_SHADOW_COLOR_B = 0.0f; 
! float TEXT_SHADOW_COLOR_A = 1.0f; 
! 
! float BUBBLE_BG_COLOR_R = 0.15f;
! float BUBBLE_BG_COLOR_G = 0.15f;
! float BUBBLE_BG_COLOR_B = 0.15f;
! float BUBBLE_BG_COLOR_A = 0.9f;
  
  #define INDICATOR_UNLIT_R  1.0f
  #define INDICATOR_UNLIT_G  1.0f
diff -crB notify-osd-0.9.29/src/main.c notify-osd-0.9.29-colors/src/main.c
*** notify-osd-0.9.29/src/main.c	2009-10-20 06:29:52.000000000 -0200
--- notify-osd-0.9.29-colors/src/main.c	2010-01-08 18:23:58.000000000 -0200
***************
*** 25,30 ****
--- 25,34 ----
  ** with this program.  If not, see <http://www.gnu.org/licenses/>.
  **
  *******************************************************************************/
+ #define _GNU_SOURCE    /* getline */
+ #include <unistd.h>    /* getuid */
+ #include <pwd.h>       /* getpwuid */
+ #include <sys/types.h> 
  
  #include <string.h>
  #include <stdlib.h>
***************
*** 39,44 ****
--- 43,170 ----
  
  #define ICONS_DIR  (DATADIR G_DIR_SEPARATOR_S "notify-osd" G_DIR_SEPARATOR_S "icons")
  
+ /* begin hack */
+ extern float TEXT_TITLE_COLOR_R;
+ extern float TEXT_TITLE_COLOR_G;
+ extern float TEXT_TITLE_COLOR_B;
+ extern float TEXT_TITLE_COLOR_A;
+ 
+ extern float TEXT_BODY_COLOR_R;
+ extern float TEXT_BODY_COLOR_G;
+ extern float TEXT_BODY_COLOR_B;
+ extern float TEXT_BODY_COLOR_A;
+ 
+ extern float TEXT_SHADOW_COLOR_R;
+ extern float TEXT_SHADOW_COLOR_G;
+ extern float TEXT_SHADOW_COLOR_B;
+ extern float TEXT_SHADOW_COLOR_A;
+ 
+ extern float BUBBLE_BG_COLOR_R;
+ extern float BUBBLE_BG_COLOR_G;
+ extern float BUBBLE_BG_COLOR_B;
+ extern float BUBBLE_BG_COLOR_A;
+ 
+ void parse_color(unsigned int c, float* r, float* g, float* b) 
+ {
+     *b = (float)(c & 0xFF) / (float)(0xFF);
+     c >>= 8;
+     *g = (float)(c & 0xFF) / (float)(0xFF);
+     c >>= 8;
+     *r = (float)(c & 0xFF) / (float)(0xFF);
+ }
+ 
+ 
+ void load_settings(void)
+ {
+     char file[PATH_MAX];
+     uid_t uid = getuid();
+     const char* settings_file_name = ".notify-osd";
+     
+     struct passwd* pw = getpwuid(uid);
+     if (!pw) {
+         fprintf(stderr,
+                 "failed to retrieve home directory. using default settings.\n");
+         return;
+     }
+     /* $HOME/.notify-osd */
+     snprintf(file, sizeof(file), "%s%s%s", pw->pw_dir,
+              G_DIR_SEPARATOR_S, settings_file_name);
+ 
+     FILE* fp = fopen(file, "r");
+ 
+     if (!fp) {
+         fprintf(stderr, "could not open '%s'. using default settings.\n", file);
+         return;
+ 
+     }
+     printf("reading settings from '%s'\n", file);
+ 
+     char* buf = NULL;
+     size_t size = 0;
+     char key[32], value[32];
+     float fvalue;
+     unsigned int ivalue;
+  
+     while(getline(&buf, &size, fp) != -1) {
+         if (sscanf(buf, "%31s = %31s", key, value) != 2)
+             continue;
+         if (!strcmp(key, "bubble-background-color") &&
+             sscanf(value, "%x", &ivalue)) {
+ 
+             parse_color(ivalue, &BUBBLE_BG_COLOR_R, &BUBBLE_BG_COLOR_G,
+                         &BUBBLE_BG_COLOR_B);
+             
+ 
+         } else if (!strcmp(key, "bubble-background-opacity") &&
+                    sscanf(value, "%f", &fvalue)) {
+             
+             BUBBLE_BG_COLOR_A = fvalue;
+             
+         } else if (!strcmp(key, "text-title-color")  &&
+                    sscanf(value, "%x", &ivalue) ) {
+ 
+             parse_color(ivalue, &TEXT_TITLE_COLOR_R, &TEXT_TITLE_COLOR_G,
+                         &TEXT_TITLE_COLOR_B);
+             
+         } else if (!strcmp(key, "text-title-opacity") &&
+                    sscanf(value, "%f", &fvalue) ) {
+             
+             TEXT_TITLE_COLOR_A = fvalue;
+             
+         } else if (!strcmp(key, "text-body-color")  &&
+                    sscanf(value, "%x", &ivalue) ) {
+ 
+             parse_color(ivalue, &TEXT_BODY_COLOR_R, &TEXT_BODY_COLOR_G,
+                         &TEXT_BODY_COLOR_B);
+ 
+         } else if (!strcmp(key, "text-body-opacity") &&
+                    sscanf(value, "%f", &fvalue) ) {
+             
+             TEXT_BODY_COLOR_A = fvalue;
+             
+         } else if (!strcmp(key, "text-shadow-color")  &&
+                    sscanf(value, "%x", &ivalue) ) {
+ 
+             parse_color(ivalue, &TEXT_SHADOW_COLOR_R, &TEXT_SHADOW_COLOR_G,
+                         &TEXT_SHADOW_COLOR_B);
+ 
+         } else if (!strcmp(key, "text-shadow-opacity") &&
+                    sscanf(value, "%f", &fvalue) ) {
+             
+             TEXT_SHADOW_COLOR_A = fvalue;
+             
+         }
+         
+     }
+ 
+     if (buf) {
+         free(buf);
+     }
+ 
+     fclose(fp);
+ }
+ /* end hack */
+ 
  int
  main (int    argc,
        char** argv)
***************
*** 62,68 ****
  	observer = observer_new ();
  	stack = stack_new (defaults, observer);
  
! 	connection = dbus_create_service_instance (DBUS_NAME);
  	if (connection == NULL)
  	{
  		g_warning ("Could not register instance");
--- 188,196 ----
  	observer = observer_new ();
  	stack = stack_new (defaults, observer);
  
!         load_settings();
! 
!         connection = dbus_create_service_instance (DBUS_NAME);
  	if (connection == NULL)
  	{
  		g_warning ("Could not register instance");
